---
const { evento } = Astro.props;
---

<div class="border border-gray-200 rounded-lg p-4 mb-4 hover:shadow-md transition-shadow">
  <div class="flex justify-between items-start">
    <div>
      <h3 class="font-bold text-lg text-secondary">{evento.title}</h3>
      <div class="flex items-center mt-1 text-sm text-gray-600">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
        </svg>
        {new Date(evento.date).toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })}
        <span class="mx-2">â€¢</span>
        {evento.time}
      </div>
      <div class="mt-1 text-sm text-gray-600">
        <span class="font-medium">Instructor:</span> {evento.instructor}
      </div>
      <div class="mt-2">
        <span class="inline-block px-2 py-0.5 text-xs rounded-full" class:list={[
          evento.estado_evidencias === 'completo' && 'bg-green-100 text-green-800',
          evento.estado_evidencias === 'parcial' && 'bg-yellow-100 text-yellow-800',
          evento.estado_evidencias === 'pendiente' && 'bg-red-100 text-red-800'
        ]}>
          {evento.estado_evidencias === 'completo' ? 'Evidencias completas' : 
           evento.estado_evidencias === 'parcial' ? 'Evidencias parciales' : 'Pendiente de evidencias'}
        </span>
      </div>
    </div>
    <a 
      href={`/evidencias/${evento.id}`} 
      class="px-3 py-1 bg-complement text-white rounded hover:bg-blue-700 transition-colors"
    >
      {evento.estado_evidencias === 'pendiente' ? 'Subir evidencias' : 'Ver evidencias'}
    </a>
  </div>
</div>